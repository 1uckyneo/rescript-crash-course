// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_int32 from "rescript/lib/es6/caml_int32.js";

function printIpAddress(ipAddr) {
  if (ipAddr.TAG === /* V4 */0) {
    var address = "" + String(ipAddr._0) + "." + String(ipAddr._1) + "." + String(ipAddr._2) + "." + String(ipAddr._3) + "";
    console.log(address);
    return ;
  }
  console.log(ipAddr._0);
}

function isHome(ipAddr) {
  if (ipAddr.TAG === /* V4 */0 && !(ipAddr._0 !== 127 || ipAddr._1 !== 0 || ipAddr._2 !== 0)) {
    return ipAddr._3 === 1;
  } else {
    return false;
  }
}

function indexOf(arr, item) {
  var index = arr.indexOf(item);
  if (index === -1) {
    return ;
  } else {
    return index;
  }
}

var index = indexOf([
      1,
      2,
      3
    ], 2);

function safeDivide(a, b) {
  if (b === 0) {
    return {
            TAG: /* Error */1,
            _0: "Invalid parameter 0"
          };
  } else {
    return {
            TAG: /* Ok */0,
            _0: Caml_int32.div(a, b)
          };
  }
}

var msg = safeDivide(10, 0);

console.log(msg._0);

var msg$1 = safeDivide(10, 2);

console.log(msg$1._0);

var home = {
  TAG: /* V4 */0,
  _0: 127,
  _1: 0,
  _2: 0,
  _3: 1
};

var loopback = {
  TAG: /* V6 */1,
  _0: "0:0:1"
};

export {
  home ,
  loopback ,
  printIpAddress ,
  isHome ,
  indexOf ,
  index ,
  safeDivide ,
}
/* index Not a pure module */
